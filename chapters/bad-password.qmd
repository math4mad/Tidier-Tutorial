#  `Bad Password` {.unnumbered}

```{julia}
include("utils.jl");
bp=bad_password;
```

## 1. peek dataset
```{julia}
@chain bp begin
    @slice(1:5)
end
```

## 2.  add password length  column
```{julia}

df2=@chain bp begin
  @mutate(password_len =length.(password))
  
end
```

## 3. tag too short password users

```{julia}
df3=@chain df2 begin
  @mutate(too_short = if_else(password_len <8, 1,0))
  
end
```

## 4. sum  short password user counts
```{julia}
@chain df3 begin
  @filter(too_short==1)
  @summarize(n = nrow())
  
end
```

```{julia}
@chain common_password begin
  @slice(1:20)
end

```

## 5. check whether user_password in  common_password
在`if_else` 中使用外部传入数组变量时需要使用:
`@eval(Main, common_pw_arr=common_password[:,1])`
定义变量
在作用域中使用时,需要使用`!!vars` 的方法
```{julia}

@eval(Main, common_pw_arr=common_password[:,1])
df4=@chain df3 begin
  @mutate(common_password = if_else(password in !!common_pw_arr , 1, 0) )
end
```

## 6. stat  common pw
```{julia}
@chain df4 begin
  @filter(common_password==1)
  @summarize(n = nrow())
end
```

## 7. user pw 是否出现在 1_00_000的常用单词列表中

```{julia}
@chain common_words begin
   @slice(1:5)
end

```
## 8. check whether user_password in  common_words
```{julia}

@eval(Main, common_words_arr=common_words=common_words[:,1])
df5=@chain df4 begin
  @mutate(common_words = if_else(password in !!common_words_arr , 1, 0) )
end
```
## 9. stat  common words
```{julia}
@chain df5 begin
  @filter(common_words==1)
  @summarize(n = nrow())
end
```

```{julia}
df6=@chain df5 begin
 @mutate(first_name=split(user_name, ".")|>d->d[1],last_name=split(user_name, ".")|>d->d[2])
end
```

## 10. check user name(first name,last name) whether is password 
```{julia}
@eval(Main, common_words_arr=common_words=common_words[:,1])
df7=@chain df6 begin
  @mutate(name_is_pwd = if_else(password==first_name||password==last_name , 1, 0) )
end
```
## 11. count  user name(first name,last name)==password
```{julia}
@chain df7 begin
  @filter(name_is_pwd==1)
  @summarize(n = nrow())
end
```


## 12. password has repeat char
```{julia}
  # df8=@chain df7 begin
  #   @mutate(pwd_has_3_)
  # end
```

## 13.   alltoghter
```{julia}
df7[1,:]
```

## 14. combine all check conditions
```{julia}
df8=@chain df7 begin
 @mutate(bad_password = if_else(too_short==1||common_password==1||
                                common_password==1||name_is_pwd==1
 , 1,0))
end
```

```{julia}
@chain df8 begin
@filter(bad_password==1)
@summarize(n = nrow())
end
```






